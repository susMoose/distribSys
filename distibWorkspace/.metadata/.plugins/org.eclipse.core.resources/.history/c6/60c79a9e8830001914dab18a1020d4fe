package cs455.overlay.node;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;

import cs455.overlay.transport.TCPConnection;
import cs455.overlay.transport.TCPServerThread;
public class Node {
	public final String ipAddr;
	public final int portNum;
	private int sendTracker = 0, receiveTracker = 0, relayTracker = 0;
	private long sendSummation = 0, receiveSummation = 0;

	// Node for registry constructor
	public Node(int portNumber) throws UnknownHostException{
		portNum = portNumber;
		InetAddress inetAddress = InetAddress.getLocalHost();
		ipAddr = inetAddress.getHostName()+ ".cs.colostate.edu";
		try {
			// TCPConnection allocates a serverSocket for the registry 
			TCPConnection tcpSocket = new TCPConnection(portNumber);		

			// Creating a new thread to listen for new connections
			Thread serverThread = new Thread (new TCPServerThread(tcpSocket.getMyServerSocket()));
			serverThread.start();

		} catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		}
	}


	// Node used for Messaging Node constructor
	public Node() throws IOException {

		InetAddress inetAddress = InetAddress.getLocalHost();
		ipAddr = inetAddress.getHostName()+ ".cs.colostate.edu";


		// TCPConnection allocates a serverSocket for the messaging node 
		TCPConnection tcpSocket = new TCPConnection(0);	

		// Creating a new thread to listen for new connections

		Thread serverThread = new Thread (new TCPServerThread(tcpSocket.getMyServerSocket()));
		serverThread.start();


		portNum = tcpSocket.getMyServerSocket().getLocalPort();

	}

}
