package cs455.overlay.transport;

import java.io.*;
import java.net.*;

import cs455.overlay.wireformats.MarshalledMessage;

public class TCPSender {
	private ServerSocket myServerSocket;
	private DataInputStream incomingInputStream;


	/** Constructor */
	public TCPSender(byte[] tcpMessage) throws IOException {
		TCPConnection tcpSocket = new TCPConnection();		//creates a socket with a port num
		this.myServerSocket = tcpSocket.getMySocket();	

		try {
			// Block on accepting connections. Once it has received a connection it will return a socket for us to use.
			Socket incomingConnectionSocket = myServerSocket.accept();
			//If we get here we are no longer blocking, so we accepted a new connection
			System.out.println("We received a connection!");
			
			//We have yet to block again, so we can handle this connection however we would like to.
			//For now, let's send a message and then wait for the response.
			DataInputStream inputStream = new DataInputStream(incomingConnectionSocket.getInputStream());
			DataOutputStream outputStream = new DataOutputStream(incomingConnectionSocket.getOutputStream());
			
			outputStream.write(tcpMessage);
			
			byte[] recipt = null;
			inputStream.readFully(recipt);
			
			
			
			
			//dout = new DataOutputStream(mySocket.getOutputStream());

		}catch (IOException e) {
			System.out.println("Server::main::accepting_connections:: " + e);
			System.exit(1);
		}
 	}


	/** Sender */
//	private void sendData(byte[] dataToSend) throws IOException {
//		int dataLength = dataToSend.length;
////		dout.writeInt(dataLength);
////		dout.write(dataToSend, 0, dataLength);
////		dout.flush();
//	}

	public static void main(String[] args) throws IOException {
//		TCPSender h = new TCPSender();
//		TCPSender g = new TCPSender();

	}


}
